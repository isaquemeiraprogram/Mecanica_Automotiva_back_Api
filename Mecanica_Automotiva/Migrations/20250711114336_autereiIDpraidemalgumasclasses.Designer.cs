// <auto-generated />
using System;
using Mecanica_Automotiva.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mecanica_Automotiva.Migrations
{
    [DbContext(typeof(DataBase))]
    [Migration("20250711114336_autereiIDpraidemalgumasclasses")]
    partial class autereiIDpraidemalgumasclasses
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Mecanica_Automotiva.Models.Agendar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("char(36)");

                    b.Property<DateOnly>("Data")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("Hora")
                        .HasColumnType("time(6)");

                    b.Property<string>("Queixa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<TimeOnly>("TempoServiçoTotal")
                        .HasColumnType("time(6)");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("double");

                    b.Property<Guid>("VeiculoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.DadosCliente.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.DadosCliente.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.DadosPeca.MarcaProduto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("MarcaProdutos");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.DadosVeiculo.MarcaVeiculo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("MarcaVeiculos");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.DadosVeiculo.ModeloVeiculo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MarcaId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.ToTable("ModeloVeiculos");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("CategoriaVeiculo")
                        .HasColumnType("int");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("MarcaProdutoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MarcaVeiculoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ModeloVeiculoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Preco")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("QtdEstoque")
                        .HasColumnType("int");

                    b.Property<Guid>("ServicoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SubCategoriaProdutoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("VeiculoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("MarcaProdutoId");

                    b.HasIndex("MarcaVeiculoId");

                    b.HasIndex("ModeloVeiculoId");

                    b.HasIndex("ServicoId");

                    b.HasIndex("SubCategoriaProdutoId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Produtos.CategoriaProduto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("CategoriasProdutos");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Produtos.SubCategoriaProduto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CategoriaProdutoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaProdutoId");

                    b.ToTable("SubCategoriasProdutos");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Servico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AgendarId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<TimeOnly>("Duracao")
                        .HasColumnType("time(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("AgendarId");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Veiculo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaVeiculo")
                        .HasColumnType("int");

                    b.Property<Guid>("MarcaId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ModeloId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.HasIndex("ModeloId");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Agendar", b =>
                {
                    b.HasOne("Mecanica_Automotiva.Models.DadosCliente.Cliente", "Cliente")
                        .WithMany("Agendamentos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mecanica_Automotiva.Models.Veiculo", "Veiculo")
                        .WithMany("Agendamentos")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.DadosCliente.Endereco", b =>
                {
                    b.HasOne("Mecanica_Automotiva.Models.DadosCliente.Cliente", "Cliente")
                        .WithMany("Endereco")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.DadosVeiculo.ModeloVeiculo", b =>
                {
                    b.HasOne("Mecanica_Automotiva.Models.DadosVeiculo.MarcaVeiculo", "Marca")
                        .WithMany("Modelos")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Produto", b =>
                {
                    b.HasOne("Mecanica_Automotiva.Models.DadosPeca.MarcaProduto", "MarcaProduto")
                        .WithMany("Produtos")
                        .HasForeignKey("MarcaProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mecanica_Automotiva.Models.DadosVeiculo.MarcaVeiculo", "MarcaVeiculo")
                        .WithMany()
                        .HasForeignKey("MarcaVeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mecanica_Automotiva.Models.DadosVeiculo.ModeloVeiculo", "ModeloVeiculo")
                        .WithMany()
                        .HasForeignKey("ModeloVeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mecanica_Automotiva.Models.Servico", "Servico")
                        .WithMany("Produtos")
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mecanica_Automotiva.Models.Produtos.SubCategoriaProduto", "SubCategoriaProduto")
                        .WithMany("Produtos")
                        .HasForeignKey("SubCategoriaProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mecanica_Automotiva.Models.Veiculo", null)
                        .WithMany("Produtos")
                        .HasForeignKey("VeiculoId");

                    b.Navigation("MarcaProduto");

                    b.Navigation("MarcaVeiculo");

                    b.Navigation("ModeloVeiculo");

                    b.Navigation("Servico");

                    b.Navigation("SubCategoriaProduto");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Produtos.SubCategoriaProduto", b =>
                {
                    b.HasOne("Mecanica_Automotiva.Models.Produtos.CategoriaProduto", "CategoriaProduto")
                        .WithMany("SubCategoria")
                        .HasForeignKey("CategoriaProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaProduto");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Servico", b =>
                {
                    b.HasOne("Mecanica_Automotiva.Models.Agendar", "Agendar")
                        .WithMany("Servicos")
                        .HasForeignKey("AgendarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agendar");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Veiculo", b =>
                {
                    b.HasOne("Mecanica_Automotiva.Models.DadosVeiculo.MarcaVeiculo", "Marca")
                        .WithMany("Veiculo")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mecanica_Automotiva.Models.DadosVeiculo.ModeloVeiculo", "Modelo")
                        .WithMany("Veiculo")
                        .HasForeignKey("ModeloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");

                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Agendar", b =>
                {
                    b.Navigation("Servicos");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.DadosCliente.Cliente", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.DadosPeca.MarcaProduto", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.DadosVeiculo.MarcaVeiculo", b =>
                {
                    b.Navigation("Modelos");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.DadosVeiculo.ModeloVeiculo", b =>
                {
                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Produtos.CategoriaProduto", b =>
                {
                    b.Navigation("SubCategoria");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Produtos.SubCategoriaProduto", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Servico", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Veiculo", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
